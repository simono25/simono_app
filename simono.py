from nicegui import ui
import random
import os

# Liste de citations inspirantes
citations = [
    "Les choses sont comme elles doivent √™tre. Accepte-les.",
    "Ce qui ne d√©pend pas de toi ne m√©rite pas ton inqui√©tude.",
    "L‚Äôimportant n‚Äôest pas de changer le monde, mais de changer sa fa√ßon d‚Äôy vivre.",
    "Adapte-toi √† ce que tu ne peux pas contr√¥ler. C‚Äôest l√† que commence la paix.",
    "Accepter, c‚Äôest le premier pas vers la libert√© int√©rieure.",
    "La sagesse commence par l'acceptation.",
    "Quand tu ne peux plus avancer, repose-toi, mais ne r√©siste pas."
]

# Page principale
@ui.page('/')
def main_page():
    # Style global du body (d√©grad√© et typographie)
    ui.query('body').style('''
        background: linear-gradient(to bottom right, #f0f4f8, #d9e2ec);
        color: #2f3e46;
        font-family: "Helvetica Neue", Arial, sans-serif;
    ''')

    # Colonne centr√©e verticalement et horizontalement
    with ui.column().classes('items-center justify-center min-h-screen px-4'):
        # Titre principal
        ui.label('üåø R√©flexion du jour').classes('text-5xl font-extrabold mb-6 text-green-800')
        
        # Citation al√©atoire
        citation = random.choice(citations)
        ui.label(f'"{citation}"').classes(
            'italic text-xl text-gray-600 mb-8 max-w-2xl text-center'
        )

        # Zone de saisie
        question = ui.textarea(
            label='‚úçÔ∏è Que veux-tu changer aujourd‚Äôhui ?',
            placeholder="√âcris ici ta pens√©e...",
            validation={'required': False}
        ).classes('w-full max-w-2xl mb-4 bg-white rounded-lg shadow-inner')

        # Label vide pour afficher la r√©ponse
        reponse_label = ui.label().classes('text-2xl text-center max-w-2xl mt-4 text-blue-700')

        # Fonction d‚Äôanalyse de la pens√©e
        def analyser():
            texte = question.value or ""
            # Mots-cl√©s hors de contr√¥le
            mots_impossibles = ['le pass√©', 'les autres', 'la m√©t√©o', 'mes parents', 'le syst√®me']
            if any(mot in texte.lower() for mot in mots_impossibles):
                reponse_label.text = "‚ùå Tu ne peux pas le changer. Accepte et adapte-toi avec s√©r√©nit√©. üåå"
            elif texte.strip() == "":
                reponse_label.text = "üïäÔ∏è Prends un moment pour √©crire, m√™me un mot peut √™tre lib√©rateur."
            else:
                reponse_label.text = "‚úÖ Tu peux probablement agir. Agis avec sagesse et courage ‚ö°Ô∏è"

        # Bouton d‚Äôanalyse
        ui.button(
            "‚ú® Puis-je le changer ?",
            on_click=analyser
        ).classes('bg-green-600 text-white rounded-2xl px-8 py-3 hover:bg-green-700 shadow-lg')

# D√©marrage de l‚Äôapplication
if __name__ == '__main__':
    # Pour d√©ploiement en ligne, on peut d√©finir HOST et PORT via variables d'environnement
    host = os.getenv('HOST', '0.0.0.0')
    port = int(os.getenv('PORT', 8080))
    ui.run(
        title='Simono - Acceptation et Adaptation',
        host=host,
        port=port,
        reload=False
    )
